Вопросы/задания: 
1. создать локальный репозиторий в текущей папке                              
cd(путь) git init
2. посмотреть статус текущего репозитория
git status
3. что такое ветка и какая веткая явлется обычно основной? 
Ветка - последовательность коммитов, основная ветка - master. 
4. добавить файл в контекст который будет коммититься 
git add (имя файла)	
5. создать коммит на основе текущего контекста для комита и указать для него комментарий 
git commit -m "(комментарий)" 
6. создать коммит, включающий изменения всех наблюдаемых файлов, и указать для него комментарий 
git commit -a -m "komment" 
7. посмотреть протокол коммитов 
git log  (чтобы выйти - нажмите 'q') 
8. просмотреть информацию о текущих настройках
git config --list
9. убрать файл из контекста 
git reset (имя файла)
10. посмотреть изменения в файле по сравнению с последним коммитом 												1 2 4 5 7 9 12 16-34
git diff (имя файла) 
11. убрать изменения относительно последнего коммита из файла ////////////////////////////////
Если файл уже в конексте, то git reset (имя файла) и git checkout (имя файла) 
Если же не в конексте, то просто git checkout (имя файла)
12. просмотреть в графическом интерфейсе историю коммитов 
gitk
13. добавить в контекст коммита все измененные и созданые файлы 
git add .
14. изменить глобальные/локальные настройки 
git config --global <что изменяем> <на что изменяем>
15. переписать имя пользователя 
 git config --global user.name "имя" 
16. просмотреть существующие ветки 
git branch
17. создать новую ветку 
git branch  <имя_ветки>  
18. переключиться на другую ветку
git checkout (имя ветки) или git checkout - ("-" - переключают между 2мя ветками)  
 19. создать новую ветку и сразу же переключиться на нее 
git checkout –b <имя>  
20. удалить ветку/ удалить ветку, даже если она не примержена
git branch -d (имя ветки); если не примержена (merge), то git branch -D (имя ветки) 
21. просмотреть в графическом интерфейсе историю коммитов по всем веткам 
gitk 
22. примержить изменения из указанной ветки в текущую 
git mеrge <название_ветки2> 
__________________________________________tiit1(papka)
23. в каком случае могуть появиться конфликты? сделайте так! 
Конфликты появляются при примерживании и ребазировании веток,когда есть несоответствие изменений файлов. 
24. как посмотреть в каких файлах конфликты 
git status 
25. как устранить конфликты 

26. как переключиться на указанный коммит
git checkout <commit> 
Где commit - это хеш (обозначение, имя) 
27. сделать ребазирование(rebase) текущей ветки 
git rebase help (http://habrahabr.ru/post/161009/ - хорошая статья про rebase) 
git rebase <ветка> 
28. устранение конфликтов во время ребазирования 
git reset --hard HEAD 
29. отменить ребазирование во время конфликтов 
git rebase –abort
30 пропустить текущний конфликтный коммит и перейти к следующему 
 git rebase --skip
________________________________________________ 
31. отправить изменения из локального репозитория для указанной ветки в удаленный(дистанционный)
1) git remote add tiit(это сокрщаенное имя, задается на выбор) https://github.com/OlegFrmMntk/tiit

2) git push tiit master 
_____________________
32. Забрать изменения из репозитория, для которого были созданы удаленные ветки по умолчанию 
git fetch [remote-name] (git fetch origin) //c46 pro-git	
git checkout -b (имя удалённой ветки) 
33. забрать изменения удаленной ветки из репозитария по умолчанию, основной ветки 
git pull origin (имя ветки) 
34. создание копии репозитория 
git clone (url) 
35 удаление и переименовывание файла 
git rm ; git mv 
36. создание, удаление, отправка файла в удаленный репозиторий(коммитим его в новую ветку, отправляем ее), удаление файла в удаленном репозитории (битбакет)
На битбакете найдёте кнопки для этого.  
37.  отправка ветки в удаленный репозиторий, удаление ветки в удаленном репозитории
git push origin --delete (имя ветки) 
Для удаленного хранения использовать bitbucket.org



add file and share repository----- главная страница репозитория, ... выдаст это
нажатие на файл->...-- удалить переименовать комментить


1, 2, 5, 6, 7, 16-29, 31-33.